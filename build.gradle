def libraryGroup =  'org.rekotlin'
def libraryVersion = '1.0.0'

buildscript {
    ext.kotlin_version = '1.3.0'
    ext.dokka_version = '0.9.15'
    ext.junitPlugin_version = '1.0.0'
    ext.junit_jupiter_version = '5.0.0-M6'
    ext.junit_platform_launcher= "1.0.0-M6"

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath "org.junit.platform:junit-platform-gradle-plugin:${junitPlugin_version}"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.jfrog.bintray'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testRuntime "org.junit.platform:junit-platform-launcher:$junit_platform_launcher"
}

test {
    testLogging {
        events 'started', 'passed'
    }
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    kotlinOptions.jvmTarget = "1.6"
}
compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    kotlinOptions.jvmTarget = "1.6"
}

bintray {
    user = System.getenv('bintrayUser')
    key = System.getenv('bintrayKey')
    publications = ['rekotlin']
    pkg {
        repo = 'rekotlin'
        name = 'rekotlin'
        userOrg = 'rekotlin'
        websiteUrl = 'https://github.com/ReKotlin/ReKotlin'
        vcsUrl = 'https://github.com/ReKotlin/ReKotlin.git'
        licenses = ["MIT"]
        publish = true
        version {
            name = libraryVersion
            desc = 'ReKotlin Library'
            released  = new Date()
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        rekotlin(MavenPublication) {
            groupId libraryGroup
            artifactId 'rekotlin'
            version libraryVersion
            from components.java
            artifact(javadocJar)
            artifact(sourcesJar)
        }
    }
}